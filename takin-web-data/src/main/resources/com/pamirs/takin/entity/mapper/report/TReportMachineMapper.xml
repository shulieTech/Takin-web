<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pamirs.takin.entity.dao.report.TReportMachineMapper">
    <resultMap id="BaseResultMap" type="com.pamirs.takin.entity.domain.entity.report.ReportMachine">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="report_id" property="reportId" jdbcType="BIGINT"/>
        <result column="application_name" property="applicationName" jdbcType="VARCHAR"/>
        <result column="machine_ip" property="machineIp" jdbcType="VARCHAR"/>
        <result column="agent_id" property="agentId" jdbcType="VARCHAR"/>
        <result column="machine_base_config" property="machineBaseConfig" jdbcType="VARCHAR"/>
        <result column="risk_value" property="riskValue" jdbcType="DECIMAL"/>
        <result column="risk_flag" property="riskFlag" jdbcType="TINYINT"/>
        <result column="risk_content" property="riskContent" jdbcType="VARCHAR"/>
        <result column="machine_tps_target_config" property="machineTpsTargetConfig" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, report_id, application_name, machine_ip, agent_id, machine_base_config, risk_value, risk_flag,
    risk_content,machine_tps_target_config
    </sql>
    <sql id="Simple_Column_List">
        id, report_id, application_name, machine_ip, agent_id, risk_value, risk_flag,
    risk_content
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from t_report_machine
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectOneByParam" resultType="com.pamirs.takin.entity.domain.entity.report.ReportMachine"
            parameterType="com.pamirs.takin.entity.domain.vo.report.ReportLocalQueryParam">
        select
        <include refid="Base_Column_List"/>
        from t_report_machine
        where report_id = #{reportId,jdbcType=BIGINT}
        and application_name = #{applicationName,jdbcType=VARCHAR}
        and machine_ip = #{machineIp,jdbcType=VARCHAR}
        limit 1
    </select>
    <select id="selectListByParam" resultMap="BaseResultMap"
            parameterType="com.pamirs.takin.entity.domain.vo.report.ReportLocalQueryParam">
        select
        <include refid="Base_Column_List"/>
        from t_report_machine
        where report_id = #{reportId,jdbcType=BIGINT}
        and application_name = #{applicationName,jdbcType=VARCHAR}
    </select>
    <select id="selectCountByReport" resultType="java.util.Map">
        select count(id)      as `count`,
               sum(risk_flag) as `riskSum`,
               application_name
        from t_report_machine
        where report_id = #{reportId,jdbcType=BIGINT}
        group by application_name
    </select>
    <insert id="insert" parameterType="com.pamirs.takin.entity.domain.entity.report.ReportMachine">
        insert into t_report_machine (report_id, application_name,
                                      machine_ip, agent_id, machine_base_config, risk_value,
                                      risk_flag, risk_content, machine_tps_target_config)
        values (#{reportId,jdbcType=BIGINT}, #{applicationName,jdbcType=VARCHAR},
                #{machineIp,jdbcType=VARCHAR}, #{agentId,jdbcType=VARCHAR}, #{machineBaseConfig,jdbcType=VARCHAR},
                #{riskValue,jdbcType=DECIMAL},
                #{riskFlag,jdbcType=TINYINT}, #{riskContent,jdbcType=VARCHAR},
                #{machineTpsTargetConfig,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertList" parameterType="java.util.List">
        insert into t_report_machine (report_id, application_name,
        machine_ip, agent_id, machine_base_config, risk_value,
        risk_flag, risk_content, machine_tps_target_config)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.reportId,jdbcType=BIGINT}, #{item.applicationName,jdbcType=VARCHAR},
            #{item.machineIp,jdbcType=VARCHAR}, #{item.agentId,jdbcType=VARCHAR},
            #{item.machineBaseConfig,jdbcType=VARCHAR},#{item.riskValue,jdbcType=DECIMAL},
            #{item.riskFlag,jdbcType=TINYINT}, #{item.riskContent,jdbcType=VARCHAR},
            #{item.machineTpsTargetConfig,jdbcType=LONGVARCHAR}
            )
        </foreach>
    </insert>

    <insert id="insertOrUpdate" parameterType="com.pamirs.takin.entity.domain.entity.report.ReportMachine">
        insert into t_report_machine (report_id, application_name,
                                      machine_ip, agent_id, machine_base_config, risk_value,
                                      risk_flag, risk_content, machine_tps_target_config)
        values (
                   #{reportId,jdbcType=BIGINT}, #{applicationName,jdbcType=VARCHAR},
                   #{machineIp,jdbcType=VARCHAR}, #{agentId,jdbcType=VARCHAR}, #{machineBaseConfig,jdbcType=VARCHAR},
                   #{riskValue,jdbcType=DECIMAL},#{riskFlag,jdbcType=TINYINT}, #{riskContent,jdbcType=VARCHAR},
                   #{machineTpsTargetConfig,jdbcType=LONGVARCHAR}
               )
        on duplicate key update machine_base_config=#{machineBaseConfig,jdbcType=VARCHAR},
                                agent_id=#{agentId,jdbcType=VARCHAR},
                                risk_value=#{riskValue,jdbcType=DECIMAL},
                                risk_flag=#{riskFlag,jdbcType=TINYINT},
                                risk_content=#{riskContent,jdbcType=VARCHAR}
    </insert>

    <select id="selectSimpleByExample" resultMap="BaseResultMap"
            parameterType="com.pamirs.takin.entity.domain.vo.report.ReportLocalQueryParam">
        select
        <include refid="Simple_Column_List"/>
        from t_report_machine
        where report_id = #{reportId,jdbcType=BIGINT}
        <if test="applicationName != null">
            and application_name = #{applicationName,jdbcType=VARCHAR}
        </if>
        <if test="riskFlag != null">
            and risk_flag = #{riskFlag,jdbcType=TINYINT}
        </if>
        order by risk_value desc
    </select>

    <update id="updateTpsTargetConfig" parameterType="com.pamirs.takin.entity.domain.entity.report.ReportMachine">
        update t_report_machine
        set machine_tps_target_config = #{machineTpsTargetConfig,jdbcType=LONGVARCHAR}
        where report_id = #{reportId,jdbcType=BIGINT}
          and application_name = #{applicationName,jdbcType=VARCHAR}
          and machine_ip = #{machineIp,jdbcType=VARCHAR}
    </update>

    <update id="updateRiskContent" parameterType="com.pamirs.takin.entity.domain.entity.report.ReportMachine">
        update t_report_machine
        set risk_flag    = #{riskFlag,jdbcType=TINYINT},
            risk_value   = #{riskValue,jdbcType=DECIMAL},
            risk_content = #{riskContent,jdbcType=VARCHAR}
        where report_id = #{reportId,jdbcType=BIGINT}
          and application_name = #{applicationName,jdbcType=VARCHAR}
          and machine_ip = #{machineIp,jdbcType=VARCHAR}
    </update>

    <delete id="deleteByReportId">
        delete
        from t_report_machine
        where report_id = #{reportId,jdbcType=BIGINT}
    </delete>

    <select id="getTraceFailedCount" resultType="java.lang.Long">
        select count(*)
        from t_tro_trace_entry
        where START_TIME <![CDATA[>=]]> #{startTime}
          and END_TIME <![CDATA[<=]]> #{endTime}
          and status <![CDATA[<>]]> '200'
    </select>

    <select id="selectTraceByTimeRange" resultType="com.pamirs.takin.entity.domain.entity.report.TakinTraceEntry">
        select id,
        app_name as appName,
        entry,
        method,
        status,
        start_time as startTime,
        end_time,
        process_time as processTime,
        trace_id as traceId
        from t_tro_trace_entry where START_TIME <![CDATA[>=]]> #{startTime} and END_TIME <![CDATA[<=]]> #{endTime}
        <if test="type !=null and type == 1 ">
            and status = "200"
        </if>
        <if test="type !=null and type == 0 ">
            and status <![CDATA[<>]]> "200"
        </if>
        and entry in
        <foreach item="item" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
        order by START_TIME desc
    </select>
</mapper>
